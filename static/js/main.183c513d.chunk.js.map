{"version":3,"sources":["Pagination.jsx","App.js","index.js"],"names":["Pagination","state","selectedPage","props","page","totalPageCount","Math","ceil","total","perPage","firstPage","alphabetLetters","pages","Array","from","_","i","setActivePage","pageNumber","setState","chosePrevPage","prevState","choseNextPage","this","indexOfLastItem","indexOfFirstItem","currentItems","slice","RenderData","items","map","item","key","className","classNames","aria-label","disabled","type","onClick","active","id","Component","e","toString","App","ReactDOM","render","document","getElementById"],"mappings":"gPAIaA,EAAb,4MACEC,MAAQ,CACNC,aAAc,EAAKC,MAAMC,MAF7B,EAKEC,eAAiBC,KAAKC,KAAK,EAAKJ,MAAMK,MAAQ,EAAKL,MAAMM,SAL3D,EAOEC,UAAY,EAAKP,MAAMC,KAPzB,EASEO,gBAAkB,EAAKR,MAAMQ,gBAT/B,EAWEC,MAAQC,MAAMC,KAAK,IAAID,MAAM,EAAKR,iBAAiB,SAACU,EAAGC,GAAJ,OAAUA,EAAI,KAXnE,EAaEC,cAAgB,SAAAC,GAAU,OAAI,WAC5B,EAAKC,SAAS,CACZjB,aAAcgB,MAfpB,EAmBEE,cAAgB,WACV,EAAKnB,MAAMC,cAAgB,EAAKQ,WAIpC,EAAKS,UAAS,SAAAE,GAAS,MAAK,CAC1BnB,aAAcmB,EAAUnB,aAAe,OAzB7C,EA6BEoB,cAAgB,WACV,EAAKrB,MAAMC,cAAgB,EAAKG,gBAIpC,EAAKc,UAAS,SAAAE,GAAS,MAAK,CAC1BnB,aAAcmB,EAAUnB,aAAe,OAnC7C,4CAuCE,WAAU,IAAD,OAELA,EACEqB,KAAKtB,MADPC,aAEMO,EAAYc,KAAKpB,MAAjBM,QACFe,EAAkBtB,EAAeO,EACjCgB,EAAmBD,EAAkBf,EACrCiB,EAAeH,KAAKZ,gBAAgBgB,MACxCF,EAAkBD,GAGdI,EAAa,SAAC,GAAD,SAAGC,MACdC,KAAI,SAAAC,GAAI,OACZ,wBACEC,IAAKD,EACLE,UAAU,mBAETF,OAKP,OACE,oCACE,wBACEE,UAAWC,IACT,OACA,aACA,wBACA,2BAGF,kBAACN,EAAD,CAAYC,MAAOH,KAErB,yBAAKS,aAAW,2BACd,wBAAIF,UAAU,qCACZ,wBACEA,UAAWC,IACT,YACA,CAAEE,SAAUb,KAAKb,YAAca,KAAKtB,MAAMC,gBAG5C,4BACEmC,KAAK,SACLJ,UAAU,YACVK,QAASf,KAAKH,eAHhB,aASDG,KAAKX,MAAMkB,KAAI,SAAA1B,GAAI,OAClB,wBACE6B,UAAWC,IACT,YACA,CAAEK,OAAQrC,IAAiBE,IAE7B4B,IAAK5B,EACLoC,GAAIpC,GAEJ,4BACEiC,KAAK,SACLJ,UAAU,YACVK,QAAS,EAAKrB,cAAcb,IAE3BA,OAKP,wBACE6B,UAAWC,IACT,YACA,CACEE,SACEb,KAAKlB,iBAAmBkB,KAAKtB,MAAMC,gBAIzC,4BACEmC,KAAK,SACLJ,UAAU,YACVK,QAASf,KAAKD,eAHhB,gBAtHd,GAAgCmB,aCA1B9B,EAAkB,YAAIE,MAAM,KAAKiB,KAAI,SAACY,EAAG1B,GAAJ,OAAWA,EAAI,IAAI2B,SAAS,OAcxDC,EAZH,kBACV,6BACE,wBAAIX,UAAU,SAAd,cACA,kBAAC,EAAD,CACEzB,MAAO,GACPC,QAAS,EACTL,KAAM,EACNO,gBAAiBA,MCTvBkC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.183c513d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport class Pagination extends Component {\n  state = {\n    selectedPage: this.props.page,\n  }\n\n  totalPageCount = Math.ceil(this.props.total / this.props.perPage);\n\n  firstPage = this.props.page;\n\n  alphabetLetters = this.props.alphabetLetters;\n\n  pages = Array.from(new Array(this.totalPageCount), (_, i) => i + 1);\n\n  setActivePage = pageNumber => () => {\n    this.setState({\n      selectedPage: pageNumber,\n    });\n  }\n\n  chosePrevPage = () => {\n    if (this.state.selectedPage <= this.firstPage) {\n      return;\n    }\n\n    this.setState(prevState => ({\n      selectedPage: prevState.selectedPage - 1,\n    }));\n  }\n\n  choseNextPage = () => {\n    if (this.state.selectedPage >= this.totalPageCount) {\n      return;\n    }\n\n    this.setState(prevState => ({\n      selectedPage: prevState.selectedPage + 1,\n    }));\n  }\n\n  render() {\n    const {\n      selectedPage,\n    } = this.state;\n    const { perPage } = this.props;\n    const indexOfLastItem = selectedPage * perPage;\n    const indexOfFirstItem = indexOfLastItem - perPage;\n    const currentItems = this.alphabetLetters.slice(\n      indexOfFirstItem, indexOfLastItem,\n    );\n\n    const RenderData = ({ items }) => (\n      items.map(item => (\n        <li\n          key={item}\n          className=\"list-group-item\"\n        >\n          {item}\n        </li>\n      ))\n    );\n\n    return (\n      <>\n        <ul\n          className={classNames(\n            'list',\n            'list-group',\n            'list-group-horizontal',\n            'justify-content-center',\n          )}\n        >\n          <RenderData items={currentItems} />\n        </ul>\n        <nav aria-label=\"Page navigation example\">\n          <ul className=\"pagination justify-content-center\">\n            <li\n              className={classNames(\n                'page-item',\n                { disabled: this.firstPage === this.state.selectedPage },\n              )}\n            >\n              <button\n                type=\"button\"\n                className=\"page-link\"\n                onClick={this.chosePrevPage}\n              >\n                Previous\n              </button>\n            </li>\n\n            {this.pages.map(page => (\n              <li\n                className={classNames(\n                  'page-item',\n                  { active: selectedPage === page },\n                )}\n                key={page}\n                id={page}\n              >\n                <button\n                  type=\"button\"\n                  className=\"page-link\"\n                  onClick={this.setActivePage(page)}\n                >\n                  {page}\n                </button>\n              </li>\n            ))}\n\n            <li\n              className={classNames(\n                'page-item',\n                {\n                  disabled:\n                    this.totalPageCount === this.state.selectedPage,\n                },\n              )}\n            >\n              <button\n                type=\"button\"\n                className=\"page-link\"\n                onClick={this.choseNextPage}\n              >\n                Next\n              </button>\n            </li>\n          </ul>\n        </nav>\n      </>\n    );\n  }\n}\n\nPagination.propTypes = {\n  page: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  perPage: PropTypes.number.isRequired,\n  alphabetLetters: PropTypes.instanceOf(Array).isRequired,\n};\n","import React from 'react';\nimport './App.css';\nimport { Pagination } from './Pagination';\n\nconst alphabetLetters = [...Array(26)].map((e, i) => (i + 10).toString(36));\n\nconst App = () => (\n  <div>\n    <h1 className=\"title\">Pagination</h1>\n    <Pagination\n      total={26}\n      perPage={5}\n      page={1}\n      alphabetLetters={alphabetLetters}\n    />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}